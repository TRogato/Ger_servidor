name: CI

on: [push, pull_request]

jobs:

  # ----------------------------------------------------------------------------
  # PHP Tests
  # ----------------------------------------------------------------------------

  test_php:
    name: Test PHP

    runs-on: ${{ matrix.os }}

    env:
      RUN_MODE: php
      CI_BUILD_DIR: ${{ env.GITHUB_WORKSPACE }}
      CI_PHP_VERSION: ${{ matrix.php }}

    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019]
        php: ['7.3', '7.4']

    services:
      db:
        image: mariadb:latest
        env:
          MYSQL_USER: root
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: servidor_testing
        ports: ['3306:3306']
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP Environment
      uses: nanasess/setup-php@master
      with:
        php-version: ${{ matrix.php }}

    - run: ./build/ci/install.sh
    - run: ./build/ci/prepare.sh
    - run: ./build/ci/script.sh
    - run: bash <(curl -s https://codecov.io/bash)

    - name: Print Laravel logs on failure
      if: failure()
      run: cat storage/logs/laravel.log

  # ----------------------------------------------------------------------------
  # Javasvript Tests
  # ----------------------------------------------------------------------------

  test_js:
    name: Test Javascript

    runs-on: ${{ matrix.os }}

    env:
      RUN_MODE: npm
      CI_BUILD_DIR: ${{ env.GITHUB_WORKSPACE }}

    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019]
        nodejs: ['12']

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup NodeJS Environment
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.nodejs }}

    - run: ./build/ci/install.sh
    - run: ./build/ci/prepare.sh
    - run: ./build/ci/script.sh
    - run: bash <(curl -s https://codecov.io/bash)
