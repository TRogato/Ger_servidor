#!/usr/bin/env bash

main() {
    case "$1" in
        f|finish|finalise)
            action="${2:-release}"
            finish_release ;;
        h|hot|hotfix)
            newver="$2" action="hotfix"
            bump_version ;;
        *)
            newver="$1" action="release"
            git flow release start "$newver" && bump_version ;;
    esac
}

bump_version() {
    echo
    echo
    echo "+----------------+"
    echo "| UPDATING FILES |"
    echo "+----------------+"
    echo
    oldver="$(php artisan servidor:version | grep -oP ' v\K.*')"
    search="${oldver}\(...develop\)"
    today=$(date "+%Y-%m-%d")

    echo -n "Bumping version to ${newver}... "
    sed -i "s/${oldver}/${newver}/" bootstrap/app.php && echo "Done" || exit 1

    # 1. Insert header for new version's changes
    # 2. Find the [Unreleased] link and add the new release diff below it
    # 3. Update the previous version number in the Unreleased link
    echo -n "Updating changelog... "
    sed -i -e "s/^\(## \[Unreleased\]\)$/\1\n\n\n## [${newver}] - ${today}/" \
        -e "s/ \(.*\/\)v${search}/&\n[${newver}]: \1v${oldver}...v${newver}/" \
        -e "s/${search}/${newver}\1/" CHANGELOG.md && echo "Done" || exit 1

    echo
    git add bootstrap/app.php CHANGELOG.md
    git commit -m "Bump version to ${newver}"

    echo
    echo "Now's your chance to make more changes. If there are none, press y."
    read -rp "Finalise release [yN]? " autopush

    if [ ! "$autopush" = "y" ]; then
        echo
        echo "Aborting to make more changes. When ready, run"
        echo "'gf release finish ${newver}' then push all branches"
        echo "and tags before finalising with './release finish'"
        exit 0
    fi

    finish_release
}

finish_release() {
    echo
    echo
    echo "+--------------------+"
    echo "| FINALISING RELEASE |"
    echo "+--------------------+"
    echo
    git flow "$action" finish "${newver}" \
        && git push origin --all && git push origin --tags
}

main "$@"
