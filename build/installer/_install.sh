install_servidor() {
    local branch="${1}"

    info "Installing Servidor..."
    clone_and_install

    info "Configuring application..."
    configure_application && install_passport

    log "Patching nginx config..."
    patch_nginx && systemctl reload nginx.service
}

clone_and_install() {
    git clone -qb "${branch}" https://github.com/dshoreman/servidor.git /var/servidor
    cd /var/servidor || (err "Could not clone Servidor!"; exit 1)

    log "Installing required Composer packages..."
    composer -n install --no-progress --no-suggest

    log "Compiling static assets..."
    npm ci && npm run prod
}

configure_application() {
    cp .env.example .env

    log "Creating database..."
    create_database

    log "Generating secure app key..."
    php artisan key:generate

    log "Migrating the database..."
    php artisan migrate --seed
}

create_database() {
    # TODO: Make the password be autogenerated
    echo "CREATE USER 'servidor'@'localhost' IDENTIFIED BY 'hunter2'" | mysql && \
        echo "GRANT ALL PRIVILEGES ON *.* TO 'servidor'@'localhost'; FLUSH PRIVILEGES;" | mysql && \
        echo "CREATE DATABASE servidor;" | mysql

    edit_line .env "DB_PASSWORD" "hunter2"
}

install_passport() {
    local client_id

    php artisan passport:keys
    php artisan passport:client -n --password --name="Servidor API Client"

    client_id=$(oauth_client_id)
    edit_line .env "PASSPORT_CLIENT_ID" "${client_id}"
    edit_line .env "PASSPORT_CLIENT_SECRET" "$(oauth_secret "${client_id}")"
}

patch_nginx() {
    nginx_config > /etc/nginx/sites-enabled/servidor.conf
    log " Writing default index page..."
    nginx_default_page > /var/www/html/index.nginx-debian.html

    # NOTE: This should be much more restrictive before final release!
    log " Setting permissions for www-data..."
    echo "www-data ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/www-data

    log " Taking ownership of the Servidor storage dir..."
    chown -R www-data:www-data /var/servidor/storage

    log "Setting owner to www-data on main web root..."
    chown www-data:www-data /var/www
}
